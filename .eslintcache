[{"C:\\Users\\charlie\\Desktop\\cv-app\\src\\index.js":"1","C:\\Users\\charlie\\Desktop\\cv-app\\src\\App.js":"2","C:\\Users\\charlie\\Desktop\\cv-app\\src\\components\\General.js":"3","C:\\Users\\charlie\\Desktop\\cv-app\\src\\components\\Education.js":"4","C:\\Users\\charlie\\Desktop\\cv-app\\src\\components\\Experience.js":"5"},{"size":226,"mtime":1607526222796,"results":"6","hashOfConfig":"7"},{"size":292,"mtime":1607559969762,"results":"8","hashOfConfig":"7"},{"size":6081,"mtime":1607532078951,"results":"9","hashOfConfig":"7"},{"size":4430,"mtime":1607561598202,"results":"10","hashOfConfig":"7"},{"size":6023,"mtime":1607532982340,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1wnmj4v",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"14"},"C:\\Users\\charlie\\Desktop\\cv-app\\src\\index.js",[],["25","26"],"C:\\Users\\charlie\\Desktop\\cv-app\\src\\App.js",[],"C:\\Users\\charlie\\Desktop\\cv-app\\src\\components\\General.js",["27"],"import React, { Component } from 'react'\r\nimport { Form, Button, Row, Col, Card, ListGroup } from 'react-bootstrap'\r\nclass General extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            name: \"John Doe\",\r\n            phone: \"222-555-111\",\r\n            email: \"john@doe.com\",\r\n            github: \"https://github.com/johndoe\",\r\n            linkedin: \"https://www.linkedin.com/in/johndoe\",\r\n            formView: false,\r\n        };\r\n\r\n        this.handleName = this.handleName.bind(this)\r\n        this.handleEmail = this.handleEmail.bind(this)\r\n        this.handlePhone = this.handlePhone.bind(this)\r\n        this.handleGit = this.handleGit.bind(this)\r\n        this.handleLinkedin = this.handleLinkedin.bind(this)\r\n        this.toggleFormView = this.toggleFormView.bind(this)\r\n    }\r\n\r\n    handleName(e) {\r\n        this.setState({\r\n            name: e.target.value,\r\n        })\r\n    }\r\n\r\n    handleEmail(e) {\r\n        this.setState({\r\n            email: e.target.value\r\n        })\r\n    }\r\n\r\n    handlePhone(e) {\r\n        this.setState({\r\n            phone: e.target.value\r\n        })\r\n    }\r\n\r\n    handleGit(e) {\r\n        this.setState({\r\n            github: e.target.value\r\n        })\r\n    }\r\n\r\n    handleLinkedin(e) {\r\n        this.setState({\r\n            linkedin: e.target.value\r\n        })\r\n    }\r\n\r\n    toggleFormView(e) {\r\n        this.setState({\r\n            formView: !this.state.formView\r\n        })\r\n    }\r\n\r\n    render() {\r\n        {\r\n            if (this.state.formView === true) {\r\n                return (\r\n                    <Row>\r\n                        <Col md={4}>\r\n                            <h2>Personal Information</h2>\r\n                            <Form >\r\n\r\n                                <Form.Group className=\"form-group\">\r\n                                    <Form.Label >Name</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        value={this.state.name}\r\n                                        onChange={this.handleName}>\r\n                                    </Form.Control>\r\n                                    <Form.Text>Enter Name</Form.Text>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group className=\"form-group\">\r\n                                    <Form.Label >Email</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        value={this.state.email}\r\n                                        onChange={this.handleEmail}>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group className=\"form-group\">\r\n                                    <Form.Label >Phone</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        value={this.state.phone}\r\n                                        onChange={this.handlePhone}>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group className=\"form-group\">\r\n                                    <Form.Label >Github</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        value={this.state.github}\r\n                                        onChange={this.handleGit}>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group className=\"form-group\">\r\n                                    <Form.Label >Phone</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        value={this.state.linkedin}\r\n                                        onChange={this.handleLinkedin}>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group className=\"form-group\">\r\n                                    <Button\r\n                                        onClick={this.toggleFormView}\r\n                                        type=\"submit\"\r\n                                        variant=\"primary\"\r\n                                    >Save\r\n                                </Button>\r\n                                </Form.Group>\r\n                            </Form>\r\n                        </Col>\r\n                    </Row>\r\n                )\r\n            } else {\r\n                return (\r\n                    <Row>\r\n                        <Col md={6}>\r\n                            <Card border=\"primary\">\r\n                                <Card.Header><h3>Personal Information</h3> </Card.Header>\r\n                                <ListGroup variant=\"flush\">\r\n                                    <ListGroup.Item>\r\n                                        <p>Name: {this.state.name}</p>\r\n                                        <p>Email: {this.state.email}</p>\r\n                                        <p>Phone: {this.state.phone}</p>\r\n                                        <p>Github: <a href={this.state.github}>{this.state.github}</a></p>\r\n                                        <p>Linkedin: <a href={this.state.linkedin}>{this.state.linkedin}</a></p>\r\n                                    </ListGroup.Item>\r\n                                    <ListGroup.Item>\r\n                                        <button className='btn btn-primary' onClick={this.toggleFormView}>Edit</button>\r\n                                    </ListGroup.Item>\r\n                                </ListGroup>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                )\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default General\r\n","C:\\Users\\charlie\\Desktop\\cv-app\\src\\components\\Education.js",["28","29"],"C:\\Users\\charlie\\Desktop\\cv-app\\src\\components\\Experience.js",["30"],"import React, { Component } from 'react'\r\nimport { Form, Button, Row, Col, Card, ListGroup } from 'react-bootstrap'\r\n\r\nclass Experience extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            companyName: 'El Maestro',\r\n            positionTitle: 'Customer Service',\r\n            mainTask: 'Front Desk',\r\n            from: '',\r\n            to: ''\r\n        };\r\n\r\n        this.handleCompanyName = this.handleCompanyName.bind(this)\r\n        this.handlePosition = this.handlePosition.bind(this)\r\n        this.handleTask = this.handleTask.bind(this)\r\n        this.handleFrom = this.handleFrom.bind(this)\r\n        this.handleTo = this.handleTo.bind(this)\r\n        this.toggleFormView = this.toggleFormView.bind(this)\r\n    }\r\n\r\n    handleCompanyName(e) {\r\n        this.setState({\r\n            companyName: e.target.value,\r\n        })\r\n    }\r\n\r\n    handlePosition(e) {\r\n        this.setState({\r\n            positionTitle: e.target.value\r\n        })\r\n    }\r\n\r\n    handleTask(e) {\r\n        this.setState({\r\n            mainTask: e.target.value\r\n        })\r\n    }\r\n\r\n    handleFrom(e) {\r\n        this.setState({\r\n            from: e.target.value\r\n        })\r\n    }\r\n\r\n    handleTo(e) {\r\n        this.setState({\r\n            to: e.target.value\r\n        })\r\n    }\r\n\r\n    toggleFormView(e) {\r\n        this.setState({\r\n            formView: !this.state.formView\r\n        })\r\n    }\r\n\r\n    render() {\r\n        {\r\n            if (this.state.formView === true) {\r\n                return (\r\n                    <Row>\r\n                        <Col md={4}>\r\n                            <h2>Practial Experience</h2>\r\n                            <Form >\r\n\r\n                                <Form.Group className=\"form-group\">\r\n                                    <Form.Label >Company Name</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        value={this.state.companyName}\r\n                                        onChange={this.handleCompanyName}>\r\n                                    </Form.Control>\r\n                                    <Form.Text>Enter Name</Form.Text>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group className=\"form-group\">\r\n                                    <Form.Label >Position Title</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        value={this.state.positionTitle}\r\n                                        onChange={this.handlePosition}>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group className=\"form-group\">\r\n                                    <Form.Label >Main Tasks</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        value={this.state.mainTask}\r\n                                        onChange={this.handleTask}>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group className=\"form-group\">\r\n                                    <Form.Label >From:</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        value={this.state.from}\r\n                                        onChange={this.handleFrom}>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group className=\"form-group\">\r\n                                    <Form.Label >To</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        value={this.state.to}\r\n                                        onChange={this.handleTo}>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group className=\"form-group\">\r\n                                    <Button\r\n                                        onClick={this.toggleFormView}\r\n                                        type=\"submit\"\r\n                                        variant=\"primary\"\r\n                                    >Save\r\n                                </Button>\r\n                                </Form.Group>\r\n                            </Form>\r\n                        </Col>\r\n                    </Row>\r\n                )\r\n            } else {\r\n                return (\r\n                    <Row>\r\n                        <Col md={6}>\r\n                            <Card border=\"primary\">\r\n                                <Card.Header><h3>Practical experience</h3> </Card.Header>\r\n                                <ListGroup variant=\"flush\">\r\n                                    <ListGroup.Item>\r\n                                        <p>Company Name: {this.state.companyName}</p>\r\n                                        <p>Position Title: {this.state.positionTitle}</p>\r\n                                        <p>Main Tasks: {this.state.mainTask}</p>\r\n                                        <p>From: {this.state.from}</p>\r\n                                        <p>To: {this.state.to}</p>\r\n                                    </ListGroup.Item>\r\n                                    <ListGroup.Item>\r\n                                        <button className='btn btn-primary' onClick={this.toggleFormView}>Edit</button>\r\n                                    </ListGroup.Item>\r\n                                </ListGroup>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                )\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default Experience\r\n",{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":61,"column":9,"nodeType":"37","messageId":"38","endLine":150,"endColumn":10},{"ruleId":"39","severity":1,"message":"40","line":1,"column":17,"nodeType":"41","messageId":"42","endLine":1,"endColumn":25},{"ruleId":"39","severity":1,"message":"43","line":2,"column":34,"nodeType":"41","messageId":"42","endLine":2,"endColumn":43},{"ruleId":"35","severity":1,"message":"36","line":61,"column":9,"nodeType":"37","messageId":"38","endLine":150,"endColumn":10},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-unused-vars","'setState' is defined but never used.","Identifier","unusedVar","'Container' is defined but never used.","no-global-assign","no-unsafe-negation"]